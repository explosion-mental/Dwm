From: https://github.com/explosion-mental
Subject: Basically the bar from https://github.com/pangteypiyush/dwm without
the alternative look on the bar. (without this
https://dwm.suckless.org/patches/alternativetags). Until I learn how to
properly diff something, you need to manually patch these.  Also this should be
named gruvbox, note that without alpha patch is where gruvbox shines, also the
"color on icons" doesn't appear on emojis

--- dwm.c	2021-06-20 19:47:36.068353100 -0500
***************
*** 52,65 ****
  #define ISVISIBLE(C)            ((C->tags & C->mon->tagset[C->mon->seltags]))
  #define LENGTH(X)               (sizeof X / sizeof X[0])
  #define MOUSEMASK               (BUTTONMASK|PointerMotionMask)
  #define WIDTH(X)                ((X)->w + 2 * (X)->bw)
  #define HEIGHT(X)               ((X)->h + 2 * (X)->bw)
  #define TAGMASK                 ((1 << LENGTH(tags)) - 1)
  #define TEXTW(X)                (drw_fontset_getwidth(drw, (X)) + lrpad)
  /* enums */
  enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
! enum { SchemeNorm, SchemeSel }; /* color schemes */
  enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
         NetWMFullscreen, NetActiveWindow, NetWMWindowType,
         NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
--- 56,91 ----
  #define ISVISIBLE(C)            ((C->tags & C->mon->tagset[C->mon->seltags]))
  #define LENGTH(X)               (sizeof X / sizeof X[0])
  #define MOUSEMASK               (BUTTONMASK|PointerMotionMask)
  #define OPAQUE                  0xffU	/* Borders */
  #define WIDTH(X)                ((X)->w + 2 * (X)->bw)
  #define HEIGHT(X)               ((X)->h + 2 * (X)->bw)
  /* enums */
  enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
! enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeLt, SchemeStatus, SchemeIndOff, SchemeIndOn, SchemeUrgent, SchemeNotify }; /* color schemes */
  enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
         NetWMFullscreen, NetActiveWindow, NetWMWindowType,
         NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
*************** dirtomon(int dir)
*** 695,709 ****
  void
  drawbar(Monitor *m)
  {
  	int x, w, sw = 0;
  	int boxs = drw->fonts->h / 9;
! 	int boxw = drw->fonts->h / 6 + 2;
  	unsigned int i, occ = 0, urg = 0;
  	Client *c;

  	/* draw status first so it can be overdrawn by tags later */
  	if (m == selmon) { /* status is only drawn on selected monitor */
! 		drw_setscheme(drw, scheme[SchemeNorm]);
  		sw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
  		drw_text(drw, m->ww - sw, 0, sw, bh, 0, stext, 0);
  	}
--- 985,1001 ----
  void
  drawbar(Monitor *m)
  {
+ 	//int x, w, sw = 0;
  	int x, w, sw = 0;
  	int boxs = drw->fonts->h / 9;
! 	int boxw = drw->fonts->h / 9;
  	unsigned int i, occ = 0, urg = 0;
  	Client *c;

  	/* draw status first so it can be overdrawn by tags later */
  	if (m == selmon) { /* status is only drawn on selected monitor */
! 		drw_setscheme(drw, scheme[SchemeStatus]);
  		sw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
  		drw_text(drw, m->ww - sw, 0, sw, bh, 0, stext, 0);
  	}
*************** drawbar(Monitor *m)
*** 716,736 ****
  	x = 0;
  	for (i = 0; i < LENGTH(tags); i++) {
  		w = TEXTW(tags[i]);
! 		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
! 		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], urg & 1 << i);
! 		if (occ & 1 << i)
! 			drw_rect(drw, x + boxs, boxs, boxw, boxw,
! 				m == selmon && selmon->sel && selmon->sel->tags & 1 << i,
! 				urg & 1 << i);
  		x += w;
  	}
  	w = blw = TEXTW(m->ltsymbol);
! 	drw_setscheme(drw, scheme[SchemeNorm]);
  	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);

  	if ((w = m->ww - sw - x) > bh) {
  		if (m->sel) {
! 			drw_setscheme(drw, scheme[m == selmon ? SchemeSel : SchemeNorm]);
  			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
  			if (m->sel->isfloating)
  				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
--- 1008,1038 ----
  	x = 0;
  	for (i = 0; i < LENGTH(tags); i++) {
  		w = TEXTW(tags[i]);
! 	        if (urg & 1 << i )
! 			drw_setscheme(drw, scheme[SchemeUrgent]);
! 		else
! 			drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
! 		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], 0);
! 		if (occ & 1 << i) {
! 			if (urg & 1 << i ) {
! 				drw_setscheme(drw, scheme[SchemeNotify]);
!                 		drw_rect(drw, x, 0, w, boxw, 1, 0);
! 			}
! 			drw_setscheme(drw, scheme[(m == selmon && selmon->sel && selmon->sel->tags & 1 << i) ? SchemeIndOn : SchemeIndOff]);
! 			drw_rect(drw, x, bh - boxw, w, boxw, 1, 0);
! 		}
  		x += w;
  	}
  	w = blw = TEXTW(m->ltsymbol);
! 	drw_setscheme(drw, scheme[SchemeLt]);
  	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);

  	if ((w = m->ww - sw - x) > bh) {
  		if (m->sel) {
! 			drw_setscheme(drw, scheme[m == selmon ? SchemeTitle : SchemeNorm]);
  			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
  			if (m->sel->isfloating)
  				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);

--- config.h	2021-06-20 19:52:34.873380091 -0500
***************
*** 1,109 ****
  /* See LICENSE file for copyright and license details. */

  /* appearance */
  static const unsigned int borderpx  = 1;        /* border pixel of windows */
  static const unsigned int snap      = 32;       /* snap pixel */
  static const int showbar            = 1;        /* 0 means no bar */
  static const int topbar             = 1;        /* 0 means bottom bar */
  static const char *fonts[]          = { "monospace:size=10" };
  static const char dmenufont[]       = "monospace:size=10";
  static const char col_gray1[]       = "#222222";
  static const char col_gray2[]       = "#444444";
  static const char col_gray3[]       = "#bbbbbb";
  static const char col_gray4[]       = "#eeeeee";
  static const char col_cyan[]        = "#005577";
- static const char *colors[][3]      = {
- 	/*               fg         bg         border   */
- 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
- 	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
- };

--- 1,380 ----
  /* See LICENSE file for copyright and license details. */

  /* appearance */
  static const unsigned int borderpx  = 1;        /* border pixel of windows */
  static const unsigned int snap      = 32;       /* snap pixel */
  static const int showbar            = 1;        /* 0 means no bar */
  static const int topbar             = 1;        /* 0 means bottom bar */
  static const char *fonts[]          = { "monospace:size=10" };
  static const char dmenufont[]       = "monospace:size=10";
  static const char col_gray1[]       = "#222222";
  static const char col_gray2[]       = "#444444";
  static const char col_gray3[]       = "#bbbbbb";
  static const char col_gray4[]       = "#eeeeee";
  static const char col_cyan[]        = "#005577";


+ // gruvbox
+ /* Note that if you refresh yours colors without recompiling (e.g. using
+ pywal and the xrdb patch), you need to remove the "const" on the colors below */
+
+ static const char col_gb_bg[]        = "#282828";
+ static const char col_gb_fg[]        = "#ebdbb2";
+
+ static const char col_gb_red1[]     = "#cc241d";
+ static const char col_gb_red2[]     = "#fb4934";
+
+ static const char col_gb_green1[]   = "#98971a";
+ static const char col_gb_green2[]   = "#b8bb26";
+
+ static const char col_gb_yellow1[]  = "#d79921";
+ static const char col_gb_yellow2[]  = "#fabd2f";
+
+ static const char col_gb_blue1[]    = "#458588";
+ static const char col_gb_blue2[]    = "#83a598";
+
+ static const char col_gb_purple1[]  = "#b16286";
+ static const char col_gb_purple2[]  = "#83869b";
+
+ static const char col_gb_aqua1[]    = "#689d6a";
+ static const char col_gb_aqua2[]    = "#8ec07c";
+
+ static const char col_gb_gray1[]    = "#a89984";
+ static const char col_gb_gray2[]    = "#928374";
+
+ static const char col_gb_orange1[]  = "#d65d0e";
+ static const char col_gb_orange2[]  = "#fe8019";
+ // gruvbox
+
+
+
+ static char *colors[][3] = {
+        /*               fg           bg           border	 */
+        [SchemeNorm]   = { normfgcolor,    col_gb_bg,	normbordercolor },   //normal tags colorl
+        [SchemeSel]    = { selfgcolor,     col_gb_bg,  selbordercolor  },   //Selected tag color
+        [SchemeUrgent] = { col_gb_fg,      col_gb_bg,      col_gb_bg }, //background color for urgent tag
+        [SchemeNotify] = { col_gb_red1,    col_gb_bg,      col_gb_bg }, //Little red bar on urgent tag
+        [SchemeTitle]  = { col_gb_fg,      col_gb_bg,      col_gb_bg }, //window title
+        [SchemeLt]     = { col_gb_orange2, col_gb_bg,      col_gb_bg }, //Layout
+        [SchemeStatus] = { col_gb_aqua2,   col_gb_bg,      col_gb_bg }, //StatusBar
+        [SchemeIndOff] = { col_gb_green2,  col_gb_bg,      col_gb_bg }, //BARontag
+        [SchemeIndOn]  = { col_gb_blue2,   col_gb_bg,      col_gb_bg }, //BARontag
+ };
--- 383,385 ----
